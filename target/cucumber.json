[
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 829329923,
              "status": "passed"
            },
            "line": 5,
            "name": "\"food\" table is truncated",
            "match": {
              "arguments": [
                {
                  "val": "food",
                  "offset": 1
                }
              ],
              "location": "DbSteps.tableIsTruncated(String)"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1131544956,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setup()"
            }
          }
        ],
        "line": 7,
        "name": "User adds new item to cache",
        "description": "",
        "id": "user-should-be-able-to-add-food-to-the-cache;user-adds-new-item-to-cache",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 280486526,
              "status": "passed"
            },
            "line": 8,
            "name": "add new food to FoodDelivery with the following fields",
            "match": {
              "location": "FoodSteps.add_new_food_to_FoodDelivery_with_the_following_fields(Food\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "description",
                  "imageUrl",
                  "price",
                  "name",
                  "foodType"
                ],
                "line": 9
              },
              {
                "cells": [
                  "Wine",
                  "https:foods.com",
                  "20.00",
                  "Merlot",
                  "Beverages"
                ],
                "line": 10
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 207119,
              "status": "passed"
            },
            "line": 11,
            "name": "verify that status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 27
                }
              ],
              "location": "FoodSteps.verify_that_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 47096505,
              "status": "passed"
            },
            "line": 12,
            "name": "verify that food has been successfully added",
            "match": {
              "location": "FoodSteps.verify_that_food_has_been_successfully_added(Food\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "description",
                  "imageUrl",
                  "price",
                  "name",
                  "foodType"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Wine",
                  "https:foods.com",
                  "20.00",
                  "Merlot",
                  "Beverages"
                ],
                "line": 14
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 156327832,
              "status": "passed"
            },
            "line": 5,
            "name": "\"food\" table is truncated",
            "match": {
              "arguments": [
                {
                  "val": "food",
                  "offset": 1
                }
              ],
              "location": "DbSteps.tableIsTruncated(String)"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 75801060,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setup()"
            }
          }
        ],
        "line": 17,
        "name": "User adds new food to FoodDelivery without image url",
        "description": "",
        "id": "user-should-be-able-to-add-food-to-the-cache;user-adds-new-food-to-fooddelivery-without-image-url",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 99984584,
              "status": "passed"
            },
            "line": 18,
            "name": "add new food to FoodDelivery with the following fields",
            "match": {
              "location": "FoodSteps.add_new_food_to_FoodDelivery_with_the_following_fields(Food\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "description",
                  "price",
                  "name",
                  "foodType"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Wine",
                  "20.00",
                  "Merlot",
                  "Beverages"
                ],
                "line": 20
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 76699,
              "status": "passed"
            },
            "line": 21,
            "name": "verify that status code is 403",
            "match": {
              "arguments": [
                {
                  "val": "403",
                  "offset": 27
                }
              ],
              "location": "FoodSteps.verify_that_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 908406,
              "status": "passed"
            },
            "line": 22,
            "name": "verify response error message \"Invalid request - Food image url cannot be null or empty.\"",
            "match": {
              "arguments": [
                {
                  "val": "Invalid request - Food image url cannot be null or empty.",
                  "offset": 31
                }
              ],
              "location": "FoodSteps.verifyResponseErrorMessage(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 152170226,
              "status": "passed"
            },
            "line": 5,
            "name": "\"food\" table is truncated",
            "match": {
              "arguments": [
                {
                  "val": "food",
                  "offset": 1
                }
              ],
              "location": "DbSteps.tableIsTruncated(String)"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 75771334,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setup()"
            }
          }
        ],
        "line": 24,
        "name": "User commits the food in cache",
        "description": "",
        "id": "user-should-be-able-to-add-food-to-the-cache;user-commits-the-food-in-cache",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 83499981,
              "status": "passed"
            },
            "line": 25,
            "name": "add new food to FoodDelivery with the following fields",
            "match": {
              "location": "FoodSteps.add_new_food_to_FoodDelivery_with_the_following_fields(Food\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "description",
                  "imageUrl",
                  "price",
                  "name",
                  "foodType"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Wine",
                  "https:foods.com",
                  "20.00",
                  "Merlot",
                  "Beverages"
                ],
                "line": 27
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 86573,
              "status": "passed"
            },
            "line": 28,
            "name": "verify that status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 27
                }
              ],
              "location": "FoodSteps.verify_that_status_code_is(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1732715,
              "status": "passed"
            },
            "line": 29,
            "name": "verify that food has been successfully added",
            "match": {
              "location": "FoodSteps.verify_that_food_has_been_successfully_added(Food\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "description",
                  "imageUrl",
                  "price",
                  "name",
                  "foodType"
                ],
                "line": 30
              },
              {
                "cells": [
                  "Wine",
                  "https:foods.com",
                  "20.00",
                  "Merlot",
                  "Beverages"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 76106720,
              "status": "passed"
            },
            "line": 32,
            "name": "users commits the cache to db",
            "match": {
              "location": "FoodSteps.users_commits_the_cache_to_db()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1420738,
              "status": "passed"
            },
            "line": 33,
            "name": "app should send the following response",
            "match": {
              "location": "FoodSteps.app_should_send_the_following_response(CommitToDbResponse\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "numberOfFoodsSaved",
                  "message"
                ],
                "line": 34
              },
              {
                "cells": [
                  "1",
                  "Food Cache is committed to db"
                ],
                "line": 35
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 81297340,
              "error_message": "java.lang.AssertionError: Invalid number of DB entries expected:\u003c1\u003e but was:\u003c0\u003e\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.junit.Assert.failNotEquals(Assert.java:743)\n\tat org.junit.Assert.assertEquals(Assert.java:118)\n\tat org.junit.Assert.assertEquals(Assert.java:555)\n\tat steps.DbSteps.the_following_food_should_be_committed_to_db(DbSteps.java:22)\n\tat ✽.And the following food should be committed to db(features/food/Food.feature:36)\n",
              "status": "failed"
            },
            "line": 36,
            "name": "the following food should be committed to db",
            "match": {
              "location": "DbSteps.the_following_food_should_be_committed_to_db(Food\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "description",
                  "food_type",
                  "image_url",
                  "name",
                  "price"
                ],
                "line": 37
              },
              {
                "cells": [
                  "Wine",
                  "0",
                  "https:foods.com",
                  "Merlot",
                  "20.00"
                ],
                "line": 38
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "User should be able to ADD food to the cache",
    "description": "",
    "id": "user-should-be-able-to-add-food-to-the-cache",
    "keyword": "Feature",
    "uri": "features/food/Food.feature",
    "tags": [
      {
        "line": 1,
        "name": "@regression"
      }
    ]
  }
]